plugins=(git)

# User configuration

source ~/.dotfiles/config/aliases

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# History
export HIST_STAMPS="%d/%m/%y %T"
export HISTTIMEFORMAT="%h %d %H:%M:%S "
export HISTFILE="${HOME}/.zsh_history"
export HISTSIZE=10000000
export SAVEHIST=${HISTSIZE}
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Vi keybindings
bindkey -v 
bindkey '^R' history-incremental-search-backward

# Tilix VTE
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
  source /etc/profile.d/vte.sh 2>/dev/null
fi

# SSH Configs

# Programming tools
## Golang
eval `go env`
export GOBIN=${HOME}/go/bin
export PATH=$PATH:$GOBIN

## Python
# Import packages to PATH
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  echo "Python PATH not configured"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  export PATH=$PATH:${HOME}/Library/Python/3.8/bin
fi

# Cloud tools
## asdf
ASDF_BIN=/usr/local/opt/asdf/libexec/asdf.sh
if [[ -f "ASDF_BIN" ]]; then
  source /usr/local/opt/asdf/libexec/asdf.sh
  source /usr/local/share/zsh/site-functions/_asdf
fi

# Cloud providers
## AWS
if [[ -f "ASDF_BIN" ]]; then
  source /usr/local/share/zsh/site-functions/_aws
fi

# Kubernetes
if [[ -f "ASDF_BIN" ]]; then
  source /usr/local/share/zsh/site-functions/_kubectl
fi

eval "$(starship init zsh)"